package controller;

import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;

import javafx.scene.control.TextField;

import javafx.scene.control.ToggleGroup;
import javafx.stage.Stage;
import model.Olimpiada;

import java.sql.SQLException;
import java.time.LocalDate;

import dao.DeportistaDAO;
import dao.OlimpiadasDAO;
import javafx.event.ActionEvent;

import javafx.scene.control.RadioButton;

public class AniadirOlimpiadaController {
	@FXML
	private TextField txtAnio;
	@FXML
	private TextField txtCiudad;
	@FXML
	private Button btnAceptar;
	@FXML
	private Button btnCancelar;
	@FXML
	private RadioButton rbtnVerano;
	@FXML
	private ToggleGroup estaciones;
	@FXML
	private RadioButton rbtnInvierno;

	private Olimpiada o;
	private OlimpiadasDAO existe;
	private Boolean edit = false;
	int id = 0;

	// Event Listener on Button[#btnAceptar].onAction
	@FXML
	public void aceptar(ActionEvent event) {
		// TODO Autogenerated
		LocalDate current_date;
		current_date = LocalDate.now();
		int current_Year = current_date.getYear();

		String temporada;
		String ciudad = txtCiudad.getText();
		int anio = 0;
		String error = "";

		if (rbtnVerano.isSelected())
			temporada = "Summer";
		else
			temporada = "Winter";

		if (ciudad.isEmpty()) {
			error += "\n El campo Ciudad no puede estar vacio";
		}
		try {
			anio = Integer.parseInt(txtAnio.getText());
			if (anio > current_Year || anio < 0) {
				error += "\n AÃ±o fuera de rango";
			}
		} catch (Exception e) {
			error += "\n La Fecha tiene que ser un entero";
		}

		String nombre = anio + " " + temporada;

		o = new Olimpiada(id, nombre, anio, temporada, ciudad);

		try {
			existe = new OlimpiadasDAO();
			if (existe.existeOlimpiada(o) == true)
				error += "\n Olimpiada ya existente";

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		if (error.equals("")) {
			try {
				if(edit) {
					existe.updateOlimpiada(o);
					Alert alert = new Alert(Alert.AlertType.INFORMATION);
					alert.initOwner(this.btnAceptar.getScene().getWindow());
					alert.setHeaderText(null);
					alert.setTitle("Info");
					alert.setContentText("Olimpiada Editada correctamente");
					alert.showAndWait();

					Stage myStage = (Stage) this.btnCancelar.getScene().getWindow();
					myStage.close();
					
				}
				else {
					existe.insertOlimpiada(o);
					Alert alert = new Alert(Alert.AlertType.INFORMATION);
					alert.initOwner(this.btnAceptar.getScene().getWindow());
					alert.setHeaderText(null);
					alert.setTitle("Info");
					alert.setContentText("Olimpiada agregada correctamente");
					alert.showAndWait();

					Stage myStage = (Stage) this.btnCancelar.getScene().getWindow();
					myStage.close();
				}
				
			} catch (Exception e) {
				// TODO: handle exception
				System.out.println("Erorr");
			}


		} else {
			Alert alert = new Alert(Alert.AlertType.ERROR);
			alert.setHeaderText(null);
			alert.setTitle("Error");
			alert.setContentText(error);
			alert.showAndWait();
		}

	}

	// Event Listener on Button[#btnCancelar].onAction
	@FXML
	public void cancelar(ActionEvent event) {
		// TODO Autogenerated
		Stage myStage = (Stage) this.btnCancelar.getScene().getWindow();
		myStage.close();
	}

	public Olimpiada getOlimpiada() {
		return o;
	}
	
	public void setOlimpiada(Olimpiada olimpiada, Boolean respuesta) {
		edit = respuesta;
		o = olimpiada;
		id = o.getId();
		txtAnio.setText(Integer.toString(o.getAnio()));
		txtCiudad.setText(o.getCiudad());
	}

}
