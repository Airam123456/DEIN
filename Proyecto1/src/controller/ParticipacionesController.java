package controller;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;

import javafx.scene.control.TextField;

import java.net.URL;
import java.sql.SQLException;
import java.util.ResourceBundle;

import dao.DeporteDAO;
import dao.DeportistaDAO;
import dao.EquipoDAO;
import dao.ParticipacionDAO;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.ListView;

import javafx.scene.control.ComboBox;

import javafx.scene.input.MouseEvent;
import model.Deportista;
import model.Equipo;
import model.Evento;
import model.Participacion;

public class ParticipacionesController implements Initializable {
	@FXML
	private ListView listParticipaciones;
	@FXML
	private ListView listDeportista;
	@FXML
	private Button btnAgregar;
	@FXML
	private Button btnEditar;
	@FXML
	private Button btnBorrar;
	@FXML
	private Button btnCancelar;
	@FXML
	private ComboBox cboxEquipo;
	@FXML
	private ComboBox<String> cboxMedalla;
	@FXML
	private TextField txtEdad;
	
	private int idEvento;
	private Evento e;
	
	private ObservableList<Deportista> deportistas;
	private DeportistaDAO cargarDeportistas;
	private Deportista d;
	
	private ObservableList<Participacion> participaciones;
	private ParticipacionDAO cargarParticipaciones;
	private Participacion p;
	
	private ObservableList<Equipo> equipos;
	private EquipoDAO cargarEquipos;
	private Equipo eq;
	
	private ObservableList<String> medallas = FXCollections.observableArrayList();
	private String med;
	private int edad;
	

	// Event Listener on ListView[#listParticipaciones].onMouseClicked
	@FXML
	public void selectParticipaciones(MouseEvent event) {
		// TODO Autogenerated
		btnBorrar.setDisable(false);
		btnEditar.setDisable(false);
	}
	// Event Listener on ListView[#listDeportista].onMouseClicked
	@FXML
	public void selectDeportista(MouseEvent event) {
		// TODO Autogenerated
		d = (Deportista) listDeportista.getSelectionModel().getSelectedItem();
		System.out.println(d);
	}
	// Event Listener on Button[#btnAgregar].onAction
	@FXML
	public void agregar(ActionEvent event) {
		// TODO Autogenerated
		
		String error = "";
		
		try {
			edad = Integer.parseInt (txtEdad.getText());
			if(edad > 100 || edad < 18) {
				error += "\n La Edad tiene que estar entre 18 y 100 aÃ±os";
			}
		} catch (Exception e) {
			error += "\n La Edad tiene que ser un entero";
		}
		
		p = new Participacion(d, e, eq, edad, med);
		
		try {
			
			cargarParticipaciones = new ParticipacionDAO();
			
			cargarParticipaciones.insertParticipacion(p);
			
			participaciones = FXCollections.observableArrayList();
			
			participaciones.addAll(cargarParticipaciones.selectParticipacionesPorEvento(e));
			listParticipaciones.setItems(participaciones);
			
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		
	}
	// Event Listener on Button[#btnEditar].onAction
	@FXML
	public void editar(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnBorrar].onAction
	@FXML
	public void borrar(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnCancelar].onAction
	@FXML
	public void cancelar(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on ComboBox[#cboxEquipo].onAction
	@FXML
	public void seleccionarEquipo(ActionEvent event) {
		// TODO Autogenerated
		eq = (Equipo) cboxEquipo.getSelectionModel().getSelectedItem();
	}
	// Event Listener on ComboBox[#cboxMedalla].onAction
	@FXML
	public void seleccionarMedalla(ActionEvent event) {
		// TODO Autogenerated
		med = cboxMedalla.getSelectionModel().getSelectedItem();
	}
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		
		medallas.addAll("Gold", "Silver", "Bronze", "Sin medalla");
		cboxMedalla.setItems(medallas);
		cboxMedalla.getSelectionModel().selectFirst();
		
		deportistas = FXCollections.observableArrayList();
		try {
			cargarDeportistas = new DeportistaDAO();
			deportistas.addAll(cargarDeportistas.selectDeportista());
			listDeportista.setItems(deportistas);

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		equipos = FXCollections.observableArrayList();

		try {
			cargarEquipos = new EquipoDAO();
			equipos.addAll(cargarEquipos.selectEquipos());
			cboxEquipo.setItems(equipos);
			cboxEquipo.getSelectionModel().selectFirst();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		btnBorrar.setDisable(true);
		btnEditar.setDisable(true);
	}
	
	public void setEvento(Evento evento) {
		e = evento;
		idEvento = e.getId_evento();
	}
	
}
