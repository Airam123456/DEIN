package controllers;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;

import java.io.IOException;
import java.net.URL;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Optional;
import java.util.ResourceBundle;

import config.ConexionDB;
import dao.EmailDAO;
import dao.PersonaDAO;
import dao.TelefonoDAO;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.MenuItem;
import javafx.scene.control.TextInputDialog;
import javafx.scene.control.Label;

import javafx.scene.control.ListView;

import javafx.scene.input.MouseEvent;
import javafx.stage.Modality;
import javafx.stage.Stage;
import model.Email;
import model.Persona;
import model.Telefono;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

public class ExamenController implements Initializable{
	@FXML
	private MenuItem menuInforme1;
	@FXML
	private MenuItem menuInforme2;
	@FXML
	private MenuItem menuAyuda;
	@FXML
	private MenuItem menuAyudaOnline;
	@FXML
	private Label lblTitulo;
	@FXML
	private ListView lstTelefonos;
	@FXML
	private Button btnNuevoTlf;
	@FXML
	private Button btnBorrarTlf;
	@FXML
	private ListView lstEmails;
	@FXML
	private Button btnNuevoEmail;
	@FXML
	private Button btnBorrarEmail;
	@FXML
	private Button btnAnterior;
	@FXML
	private Button btnSiguiente;
	@FXML
	private Label lblNumPersona;
	
	//Personas
	private ArrayList<Persona> arrayPersonas;
	
	private PersonaDAO cargarPersonas;
	private Persona p;
	
	private int totalPersonas = 0;
	private int indicePersonas = 0;
	
	
	
	//Emails
	private EmailDAO cargarEmail;
	private Email e;
	
	private ObservableList<Email> oListEmail;
	private int indiceLstEmail = -1;
	
	//Telefonos
	
	private TelefonoDAO cargarTelefono;
	private Telefono t;

	private ObservableList<Telefono> oListTelefono;
	private int indiceLstTelefono = -1;
	

	// Event Listener on MenuItem[#menuInforme1].onAction
	@FXML
	public void abrirInforme1(ActionEvent event) throws SQLException {
		// TODO Autogenerated
		
		ConexionDB cn = new ConexionDB();
		JasperReport report;
		try {
			report = (JasperReport) JRLoader.loadObject(getClass().getResource("/informes/informe1.jasper"));
			JasperPrint jprint = JasperFillManager.fillReport(report, null, cn.getConexion());
			JasperViewer viewer = new JasperViewer(jprint, false);
			viewer.setVisible(true);
		} catch (JRException e) {
			// TODO Auto-generated catch block
			Alert alert = new Alert(Alert.AlertType.ERROR);
			alert.setHeaderText(null);
			alert.setTitle("Error");
			alert.setContentText("Error al crear el informe");
			alert.showAndWait();
			e.printStackTrace();
		}
		
	}
	// Event Listener on MenuItem[#menuInforme2].onAction
	@FXML
	public void abrirInforme2(ActionEvent event) throws SQLException {
		// TODO Autogenerated
		
		ConexionDB cn = new ConexionDB();
		JasperReport report;
		try {
			report = (JasperReport) JRLoader.loadObject(getClass().getResource("/informes/informe2.jasper"));
			JasperPrint jprint = JasperFillManager.fillReport(report, null, cn.getConexion());
			JasperViewer viewer = new JasperViewer(jprint, false);
			viewer.setVisible(true);
		} catch (JRException e) {
			// TODO Auto-generated catch block
			Alert alert = new Alert(Alert.AlertType.ERROR);
			alert.setHeaderText(null);
			alert.setTitle("Error");
			alert.setContentText("Error al crear el informe");
			alert.showAndWait();
			e.printStackTrace();
		}
		
	}
	// Event Listener on MenuItem[#menuAyuda].onAction
	@FXML
	public void abrirAyuda(ActionEvent event) {
		// TODO Autogenerated
		FXMLLoader loader = new FXMLLoader(getClass().getResource("/fxml/VisorAyuda.fxml"));
		Parent root;
		
			try {
				root = loader.load();
				Scene scene = new Scene(root);
				Stage stage = new Stage();
				stage.setScene(scene);
				stage.setTitle("Ayuda");
				stage.show();
			} catch (IOException e) {
				Alert alert = new Alert(Alert.AlertType.ERROR);
				alert.setHeaderText(null);
				alert.setContentText(e.getMessage());
				alert.showAndWait();
			
		}
	
	}
	// Event Listener on MenuItem[#menuAyudaOnline].onAction
	@FXML
	public void abrirAyudaOnline(ActionEvent event) {
		// TODO Autogenerated
		
		FXMLLoader loader = new FXMLLoader(getClass().getResource("/fxml/VisorOnline.fxml"));
		Parent root;
		try {
			root = loader.load();
			Scene scene = new Scene(root);
			Stage stage = new Stage();
			stage.setScene(scene);
			stage.setTitle("Ayuda Online");
			stage.show();
		} catch (IOException e) {
			Alert alert = new Alert(Alert.AlertType.ERROR);
			alert.setHeaderText(null);
			alert.setContentText(e.getMessage());
			alert.showAndWait();
		}
	}
	// Event Listener on ListView[#lstTelefonos].onMouseClicked
	@FXML
	public void seleccionarTelefono(MouseEvent event) {
		// TODO Autogenerated
		
		if (lstTelefonos.getSelectionModel().getSelectedItem() != null) {
			btnBorrarTlf.setDisable(false);
			
			indiceLstTelefono = lstTelefonos.getSelectionModel().getSelectedIndex();
			t = (Telefono) lstTelefonos.getSelectionModel().getSelectedItem();
		}
	}
	// Event Listener on Button[#btnNuevoTlf].onAction
	@FXML
	public void nuevoTlf(ActionEvent event) throws SQLException {
		// TODO Autogenerated
		
		TextInputDialog dialog = new TextInputDialog("");
		dialog.setTitle("Nuevo Telefono");
		dialog.setHeaderText(null);
		dialog.setContentText("Escibe un numero de telefono:");
		Optional<String> dato = dialog.showAndWait();
		String nuevoTlf = "1";
		if (dato.isPresent()) {
			nuevoTlf=dato.get();
		}
		
		while (nuevoTlf.length() != 9 || cargarTelefono.existeTelefono(p.getDni(), nuevoTlf)) {
			Alert alert= new Alert(Alert.AlertType.INFORMATION);
			alert.setHeaderText(null);
			alert.setTitle("ERROR");
			alert.setContentText("El numero de telefono esta debe tener 9 digitos y no estar repetido");
			alert.showAndWait();
					
			dialog = new TextInputDialog("");
			dialog.setTitle("Nuevo Telefono");
			dialog.setHeaderText(null);
			dialog.setContentText("Escibe un numero de telefono:");
			dato = dialog.showAndWait();
			if (dato.isPresent()) {
				nuevoTlf=dato.get();
			}
			
		}
		
		if (nuevoTlf != "1") {
			cargarTelefono.insertTelefono(new Telefono(0,p.getDni(), nuevoTlf));
			
			Alert alert= new Alert(Alert.AlertType.INFORMATION);
			alert.setHeaderText(null);
			alert.setTitle("Correcto");
			alert.setContentText("Telefono creado correctamente");
			alert.showAndWait();
			
			cargarTelefonos();
		}
		
	}
	// Event Listener on Button[#btnBorrarTlf].onAction
	@FXML
	public void borrarTlf(ActionEvent event) throws SQLException {
		// TODO Autogenerated
		

		try {
			cargarTelefono.deleteTelefono(t);
			btnBorrarTlf.setDisable(true);
			cargarTelefonos();
			
		} catch (Exception e) {
			// TODO: handle exception
			Alert alert = new Alert(Alert.AlertType.ERROR);
			alert.setHeaderText(null);
			alert.setTitle("Error");
			alert.setContentText("Error al borrar el telefono");
			alert.showAndWait();
			e.printStackTrace();
		}
	}
	// Event Listener on ListView[#lstEmails].onMouseClicked
	@FXML
	public void seleccionarEmail(MouseEvent event) {
		// TODO Autogenerated
		
		if (lstEmails.getSelectionModel().getSelectedItem() != null) {
			btnBorrarEmail.setDisable(false);
			
			indiceLstEmail = lstEmails.getSelectionModel().getSelectedIndex();
			e = (Email) lstEmails.getSelectionModel().getSelectedItem();
		}
	}
	// Event Listener on Button[#btnNuevoEmail].onAction
	@FXML
	public void nuevoEmail(ActionEvent event) {
		// TODO Autogenerated
		

		TextInputDialog dialog = new TextInputDialog("");
		dialog.setTitle("Nuevo Email");
		dialog.setHeaderText(null);
		dialog.setContentText("Escibe un email:");
		Optional<String> dato = dialog.showAndWait();
		String nuevoEmail = "1";
		if (dato.isPresent()) {
			nuevoEmail=dato.get();
		}
		
		while (!nuevoEmail.contains("@") || cargarEmail.existeEmail(p.getDni(), nuevoEmail)) {
			Alert alert= new Alert(Alert.AlertType.INFORMATION);
			alert.setHeaderText(null);
			alert.setTitle("ERROR");
			alert.setContentText("El email debe cointener una @ y no estar repetido");
			alert.showAndWait();
			
			
			dialog = new TextInputDialog("");
			dialog.setTitle("Nuevo email");
			dialog.setHeaderText(null);
			dialog.setContentText("Escibe un email:");
			dato = dialog.showAndWait();
			if (dato.isPresent()) {
				nuevoEmail=dato.get();
			}
			
		}
		
		if (nuevoEmail != "1") {
			cargarEmail.insertEmail(new Email(0,p.getDni(), nuevoEmail));
			
			Alert alert= new Alert(Alert.AlertType.INFORMATION);
			alert.setHeaderText(null);
			alert.setTitle("Correcto");
			alert.setContentText("Email creado correctamente");
			alert.showAndWait();
			
			cargarEmail();
		}
	}
	// Event Listener on Button[#btnBorrarEmail].onAction
	@FXML
	public void borrarEmail(ActionEvent event) {
		// TODO Autogenerated
		
		try {
			cargarEmail.deleteEmail(e);
			btnBorrarEmail.setDisable(true);
			cargarEmail();
			
		} catch (Exception e) {
			// TODO: handle exception
			Alert alert = new Alert(Alert.AlertType.ERROR);
			alert.setHeaderText(null);
			alert.setTitle("Error");
			alert.setContentText("Error al borrar el email");
			alert.showAndWait();
			e.printStackTrace();
		}
	}
	// Event Listener on Button[#btnAnterior].onAction
    @FXML
    void anterior(ActionEvent event) {
		
		
		
		if ((indicePersonas + 1) == totalPersonas) {
			btnAnterior.setDisable(false);
			
		}
		
		indicePersonas--;
		
		if (indicePersonas == 0) {
			btnSiguiente.setDisable(true);
		}


		cargarPersonas();
		cargarEmail();
		cargarTelefonos();
    	
    }
	// Event Listener on Button[#btnSiguiente].onAction
	@FXML
    void siguiente(ActionEvent event) {

		
		
		if (indicePersonas == 0) {
			btnAnterior.setDisable(false);
		}
		
		indicePersonas++;
		
		if ((indicePersonas + 1) == totalPersonas) {
			btnSiguiente.setDisable(true);
		}

		cargarPersonas();
		cargarEmail();
		cargarTelefonos();

    }
	
	private String mostrarTextInputDialog(String parametro) {
		TextInputDialog dialog = new TextInputDialog("");
		dialog.setTitle("Nuevo " + parametro);
		dialog.setHeaderText(null);
		dialog.setContentText("Introduce el nuevo " + parametro);
		Optional<String> dato = dialog.showAndWait();
		if (dato.isPresent()) {
			String dato_sin_optional = dato.get();
			return dato_sin_optional;
		}
		return "";
	}
	
	private void cargarPersonas() {
		try {
			cargarPersonas = new PersonaDAO();
			
			arrayPersonas = cargarPersonas.selectPersonas();

			totalPersonas = arrayPersonas.size();

			if (totalPersonas != 0) {
				
				lblNumPersona.setText((indicePersonas + 1) + " / " + totalPersonas);
				lblTitulo.setText(arrayPersonas.get(indicePersonas).toString());
				if (indicePersonas == 0)
					btnAnterior.setDisable(true);
				p = arrayPersonas.get(indicePersonas);

			} 
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			Alert alert = new Alert(Alert.AlertType.ERROR);
			alert.setHeaderText(null);
			alert.setTitle("Error");
			alert.setContentText("Error de acceso a la base de datos");
			alert.showAndWait();
			e.printStackTrace();
		}

	}
	
	private void cargarEmail() {

		oListEmail = FXCollections.observableArrayList();
		
		try {
			cargarEmail = new EmailDAO();
			oListEmail.addAll(cargarEmail.selectEmail(p.getDni()));
			lstEmails.setItems(oListEmail);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			Alert alert = new Alert(Alert.AlertType.ERROR);
			alert.setHeaderText(null);
			alert.setTitle("Error");
			alert.setContentText("Error de acceso a la base de datos");
			alert.showAndWait();
			e.printStackTrace();
		}
		
		btnBorrarEmail.setDisable(true);
	}
	
	private void cargarTelefonos() {

		oListTelefono = FXCollections.observableArrayList();
		
		try {
			cargarTelefono = new TelefonoDAO();
			oListTelefono.addAll(cargarTelefono.selectTelefonos(p.getDni()));
			lstTelefonos.setItems(oListTelefono);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			Alert alert = new Alert(Alert.AlertType.ERROR);
			alert.setHeaderText(null);
			alert.setTitle("Error");
			alert.setContentText("Error de acceso a la base de datos");
			alert.showAndWait();
			e.printStackTrace();
		}
		
		btnBorrarTlf.setDisable(true);
	}
	
	
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		cargarPersonas();
		cargarEmail();
		cargarTelefonos();
		
	}
}
